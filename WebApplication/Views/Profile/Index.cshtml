@model UserDto
@{
    ViewBag.Title = "Profile Management";
}

<div class="container mt-5">
    <div class="col-12 text-center">
        <h1 class="mb-4 text-white">Profile Management</h1>
    </div>
    <form asp-action="Update" enctype="multipart/form-data" class="needs-validation" novalidate>
        <input type="hidden" name="ID" value="@Model.ID" />
        <input type="hidden" name="UserName" value="@Model.UserName" />

        <div class="row">
            <div class="col-md-6 mb-3">
                <label for="Name" class="form-label text-white">Name:</label>
                <input type="text" id="Name" name="Name" class="form-control" value="@Model.Name" required />
                <div class="invalid-feedback">Please provide a name.</div>
            </div>
            <div class="col-md-6 mb-3">
                <label for="Email" class="form-label text-white">Email:</label>
                <input type="email" id="Email" name="Email" class="form-control" value="@Model.Email" required />
                <div class="invalid-feedback">Please provide a valid email address.</div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-6 mb-3">
                <label for="PhoneNumber" class="form-label text-white">Phone Number:</label>
                <input type="tel" id="PhoneNumber" name="PhoneNumber" class="form-control" value="@Model.PhoneNumber" />
            </div>
            <div class="col-md-6 mb-3">
                <label for="Date" class="form-label text-white">Date:</label>
                <input   type="text" id="datepicker" max="@DateTime.Now.ToString("yyyy-MM-dd")" name="Date" class="form-control" value="@Model.Date" />
            </div>
        </div>

        <div class="row">
            <div class="col-md-6 mb-3">
                <label for="Country" class="form-label text-white">Country:</label>
                <input type="text" id="Country" name="Counrty" class="form-control" value="@Model.Counrty" />
            </div>
            <div class="col-md-6 mb-3">
                <label for="State" class="form-label text-white">State:</label>
                <input type="text" id="State" name="State" class="form-control" value="@Model.State" />
            </div>
        </div>

        <div class="mb-3">
            <label for="Address" class="form-label text-white">Address:</label>
            <textarea id="Address" name="Address" class="form-control">@Model.Address</textarea>
        </div>

        <div class="mb-3 form-check">
            <input type="checkbox" id="IsActive" name="IsActive" class="form-check-input" @(Model.IsActive ? "checked" : "") />
            <label for="IsActive" class="form-check-label">Is Active</label>
        </div>

        @if(string.IsNullOrEmpty(Model.ImageUrl))
        {
            <div class="mb-3">
                <label for="Image" class="form-label text-white">Upload Image:</label>
                <input asp-for="Image" type="file" id="Image"  onchange="previewImage(event)" required />
                <span asp-validation-for="Image" class="text-danger"></span>
            </div>
        }
        else
        {
            <div class="mb-3">
                <label for="Image" class="form-label text-white">Profile Image:</label>
                <div class="d-flex align-items-center">
                    <img src="@Model.ImageUrl" class="me-3" alt="Profile Image" style="max-width: 100px; max-height: 100px;" />                   
                </div>
            </div>
            <div class="mb-3">
                <input asp-for="Image" type="file" id="Image"  onchange="previewImage(event)" />
            </div>
        }

        <div class="mb-3">
            <img id="imagePreview" src="#" alt="Preview Image" style="display: none; max-width: 100%; max-height: 200px;" />
        </div>

        <button type="submit" class="btn btn-success">Update Profile</button>
    </form>
</div>

@section Scripts {
    <script src="~/js/imagepreview.js"></script>
    <script src="~/js/datepicker.js"></script>
    <script>
        (function () {
            'use strict';

            var forms = document.querySelectorAll('.needs-validation');

            Array.prototype.slice.call(forms)
                .forEach(function (form) {
                    form.addEventListener('submit', function (event) {
                        if (!form.checkValidity()) {
                            event.preventDefault();
                            event.stopPropagation();
                        }

                        form.classList.add('was-validated');
                    }, false);
                });
        })();
    </script>
}
